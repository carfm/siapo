/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas.auditor;

import clases.Usuario;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import pantallas.general.MenuPpal;
import pantallas.mensajeria.NotificacionNueva;
import pantallas.mensajeria.errorNuevo;

public class EliminarAuditoria extends javax.swing.JFrame {

    public Calendar c;
    private Usuario u;
    public NotificacionNueva n;
    public errorNuevo e;
    private String fechaHoy = "";

    public EliminarAuditoria(Usuario u, NotificacionNueva n, errorNuevo e) {
        c = Calendar.getInstance();
        this.u = new Usuario();
        this.u.setUser(u.getUser());
        this.u.setNombreUsuario(u.getNombreUsuario());
        this.u.setListaTiposUsuario(u.getListaTiposUsuario());
        this.e = e;
        this.n = n;
        initComponents();
        fecha.setEnabled(false);
        llenarOrdenes("user", u.getUser(), true);
        setSize(1024, 680);
        setLocationRelativeTo(null);
    }

    public EliminarAuditoria() {
        c = Calendar.getInstance();
        this.u = new Usuario();
        initComponents();
        setSize(1024, 680);
        setLocationRelativeTo(null);
        llenarOrdenes("user", u.getUser(), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        busqueda = new javax.swing.ButtonGroup();
        header = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        footer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ordenesAuditadas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaOrdenes = new javax.swing.JTable();
        buscarSpecimen = new javax.swing.JRadioButton();
        buscarUser = new javax.swing.JRadioButton();
        buscar = new javax.swing.JTextField();
        buscar_btn = new javax.swing.JToggleButton();
        fechaRadio = new javax.swing.JRadioButton();
        fecha = new com.toedter.calendar.JDateChooser();
        erroresDeOrden = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        errores = new javax.swing.JTable();
        botones = new javax.swing.JPanel();
        borrar = new javax.swing.JToggleButton();
        cancelar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de Auditorias - Eliminar Auditoria");
        setResizable(false);

        header.setBackground(new java.awt.Color(60, 117, 207));

        jPanel2.setBackground(new java.awt.Color(47, 63, 79));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(Integer.toString(c.get(Calendar.DATE))+"-"+Integer.toString(c.get(Calendar.MONTH)+1)+"-"+Integer.toString(c.get(Calendar.YEAR)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        try{
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo());
        }catch(Exception e){
            jLabel17.setText("No se puede cargar la informacion");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        jPanel3.setBackground(new java.awt.Color(94, 112, 144));
        jPanel3.setForeground(new java.awt.Color(94, 112, 144));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Gestión de Auditorias - Eliminar Auditoria ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Logo HMCR.jpg"))); // NOI18N

        jButton12.setBackground(new java.awt.Color(60, 117, 207));
        jButton12.setForeground(new java.awt.Color(60, 117, 207));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1378460112_home.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Menú principal");

        jButton10.setBackground(new java.awt.Color(60, 117, 207));
        jButton10.setForeground(new java.awt.Color(60, 117, 207));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizarRegistroOrden.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Modificar Auditoria");
        jLabel3.setEnabled(false);

        jButton6.setBackground(new java.awt.Color(60, 117, 207));
        jButton6.setForeground(new java.awt.Color(60, 117, 207));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elimarRegistroOrden.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Eliminar Auditoria");

        jButton13.setBackground(new java.awt.Color(60, 117, 207));
        jButton13.setForeground(new java.awt.Color(60, 117, 207));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Actions-insert-table-icon.png"))); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Auditar Ordenes");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(headerLayout.createSequentialGroup()
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(headerLayout.createSequentialGroup()
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        footer.setBackground(new java.awt.Color(94, 112, 144));
        footer.setForeground(new java.awt.Color(94, 112, 144));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Universidad de El Salvador ©Copyright 2013 ");

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ordenesAuditadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Ordenes Auditadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        ordenesAuditadas.setPreferredSize(new java.awt.Dimension(275, 397));

        listaOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Specimen", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOrdenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaOrdenes);

        busqueda.add(buscarSpecimen);
        buscarSpecimen.setSelected(true);
        buscarSpecimen.setText("Specimen");
        buscarSpecimen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarSpecimenActionPerformed(evt);
            }
        });

        busqueda.add(buscarUser);
        buscarUser.setText("User");
        buscarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUserActionPerformed(evt);
            }
        });

        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        buscar_btn.setText("Buscar");
        buscar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_btnActionPerformed(evt);
            }
        });

        busqueda.add(fechaRadio);
        fechaRadio.setText("fecha");
        fechaRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fechaRadioItemStateChanged(evt);
            }
        });

        fecha.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout ordenesAuditadasLayout = new javax.swing.GroupLayout(ordenesAuditadas);
        ordenesAuditadas.setLayout(ordenesAuditadasLayout);
        ordenesAuditadasLayout.setHorizontalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(buscar)
                                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                        .addComponent(buscarSpecimen)
                                        .addGap(18, 18, 18)
                                        .addComponent(buscarUser)))
                                .addGap(18, 18, 18)
                                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaRadio)
                                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buscar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        ordenesAuditadasLayout.setVerticalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarSpecimen)
                    .addComponent(buscarUser)
                    .addComponent(fechaRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscar_btn))
        );

        erroresDeOrden.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Errores en la Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        errores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Error", "Descripcion", "Comentario", "Recurrencia", "Aprobado", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        errores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                erroresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(errores);
        if (errores.getColumnModel().getColumnCount() > 0) {
            errores.getColumnModel().getColumn(0).setMinWidth(90);
            errores.getColumnModel().getColumn(0).setPreferredWidth(90);
            errores.getColumnModel().getColumn(0).setMaxWidth(90);
            errores.getColumnModel().getColumn(1).setMinWidth(200);
            errores.getColumnModel().getColumn(1).setPreferredWidth(200);
            errores.getColumnModel().getColumn(1).setMaxWidth(200);
            errores.getColumnModel().getColumn(2).setMinWidth(200);
            errores.getColumnModel().getColumn(2).setPreferredWidth(200);
            errores.getColumnModel().getColumn(2).setMaxWidth(200);
            errores.getColumnModel().getColumn(3).setMinWidth(90);
            errores.getColumnModel().getColumn(3).setPreferredWidth(90);
            errores.getColumnModel().getColumn(3).setMaxWidth(90);
            errores.getColumnModel().getColumn(4).setMinWidth(90);
            errores.getColumnModel().getColumn(4).setPreferredWidth(90);
            errores.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        javax.swing.GroupLayout erroresDeOrdenLayout = new javax.swing.GroupLayout(erroresDeOrden);
        erroresDeOrden.setLayout(erroresDeOrdenLayout);
        erroresDeOrdenLayout.setHorizontalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, erroresDeOrdenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        erroresDeOrdenLayout.setVerticalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(erroresDeOrdenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        borrar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        borrar.setText("Eliminar Auditoria");
        borrar.setEnabled(false);
        borrar.setMaximumSize(new java.awt.Dimension(145, 27));
        borrar.setMinimumSize(new java.awt.Dimension(145, 27));
        borrar.setPreferredSize(new java.awt.Dimension(145, 27));
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setEnabled(false);
        cancelar.setMaximumSize(new java.awt.Dimension(145, 27));
        cancelar.setMinimumSize(new java.awt.Dimension(145, 27));
        cancelar.setPreferredSize(new java.awt.Dimension(145, 27));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesLayout = new javax.swing.GroupLayout(botones);
        botones.setLayout(botonesLayout);
        botonesLayout.setHorizontalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        botonesLayout.setVerticalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ordenesAuditadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(erroresDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(footer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ordenesAuditadas, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erroresDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        new MenuPpal(u, false, this.n, this.e).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        new ModificarAuditoria(u, this.n, this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new EliminarAuditoria(u, this.n, this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        new AuditoriaDeOrdenes(u, this.n, this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void listaOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOrdenesMouseClicked
        String orden = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String user = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
        limpiarTabla(errores);
        llenarErrores(orden, user, true);
        borrar.setEnabled(true);
        cancelar.setEnabled(true);
    }//GEN-LAST:event_listaOrdenesMouseClicked

    private void buscarSpecimenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarSpecimenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarSpecimenActionPerformed

    private void buscarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarUserActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void buscar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_btnActionPerformed
        if (fechaRadio.isSelected()) {
            try {
                SimpleDateFormat variableFecha = new SimpleDateFormat("dd-MM-yyyy");
                String fechaB = variableFecha.format(fecha.getDate());
                if (fechaB.isEmpty()) {
                    fechaHoy = "";
                } else {
                    fechaHoy = u.fechaCorrecta(fechaB);
                }

            } catch (Exception e) {

            } finally {
                limpiarTabla(listaOrdenes);
                llenarOrdenes("user", u.getUser(), true);
            }
        } else {
            if (buscar.getText().equals("")) {
                limpiarTabla(listaOrdenes);
                llenarOrdenes("user", u.getUser(), true);

            } else {
                if (buscarSpecimen.isSelected()) {
                    llenarOrdenes("specimen", buscar.getText(), true);
                } else {
                    llenarOrdenes("user", buscar.getText(), true);
                }
            }
        }

    }//GEN-LAST:event_buscar_btnActionPerformed

    private void erroresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_erroresMouseClicked
    }//GEN-LAST:event_erroresMouseClicked

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        String spec = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String user = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
        DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
        String strFechaActual;
        strFechaActual = df.format(new java.util.Date());
        int idMen = 0;
        boolean exito = u.borrar("puede_tener", "specimen=\"" + spec + "\"");
        u.borrar("procesa_audita", "specimen=\"" + listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString() + "\""
                + "and tipoOperacion=2");
        if (exito) {
            u.actualizar("procesa_audita", "recurrencia=(recurrencia-1)", "specimen='" + spec + "', AND user='" + user + "'");
            if (errores.getColumnCount() >= 1) {
                ResultSet res = u.seleccionar("idMensaje", "mensaje", "");
                try {
                    if (res.last()) {
                        idMen = res.getInt("idMensaje");
                        idMen++;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(EliminarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
                }
                u.cerrarConexionBase();
                u.insertar("mensaje", "" + idMen + ",2,'" + strFechaActual + "',"
                        + "'" + c.get(Calendar.HOUR_OF_DAY) + ":" + c.get(Calendar.MINUTE) + ":" + c.get(Calendar.SECOND) + "',"
                        + "'Se han eliminado todos los errores del specimen: " + spec + "', 'Auditoria Eliminada!!'");
                u.insertar("gestiona", "null," + idMen + ",'" + user + "',0,0,1");  //funciona
            }
            JOptionPane.showMessageDialog(null, "La auditoria ha sido eliminada.");
            limpiarTabla(listaOrdenes);
            limpiarTabla(errores);
            llenarOrdenes("user", u.getUser(), true);
        } else {
            JOptionPane.showMessageDialog(null, "Lo sentimos. Fallo la eliminacion.");
        }

    }//GEN-LAST:event_borrarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        limpiarTabla(errores);
    }//GEN-LAST:event_cancelarActionPerformed

    private void fechaRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fechaRadioItemStateChanged
        if (fechaRadio.isSelected()) {
            buscar.setEnabled(false);
            fecha.setEnabled(true);
        } else {
            fecha.setEnabled(false);
            buscar.setEnabled(true);
        }
    }//GEN-LAST:event_fechaRadioItemStateChanged

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton borrar;
    private javax.swing.JPanel botones;
    private javax.swing.JTextField buscar;
    private javax.swing.JRadioButton buscarSpecimen;
    private javax.swing.JRadioButton buscarUser;
    private javax.swing.JToggleButton buscar_btn;
    private javax.swing.ButtonGroup busqueda;
    private javax.swing.JToggleButton cancelar;
    private javax.swing.JTable errores;
    private javax.swing.JPanel erroresDeOrden;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JRadioButton fechaRadio;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listaOrdenes;
    private javax.swing.JPanel ordenesAuditadas;
    // End of variables declaration//GEN-END:variables
 private void llenarErrores(String orden, String user, boolean primeraVez) {
        int i, j, filas;//i fila j colummna  
        ResultSet r;
        try {
            r = u.seleccionar("count(*) as filas", "puede_tener", "specimen='"+orden+"'");
            filas = r.getInt("filas");
            u.cerrarConexionBase();
            r = u.seleccionar("puede_tener.idPuedeTener,puede_tener.codigoError, Error.nombreError, "
                    + "orden.comentarioAuditor, error.aprobado", "puede_tener, error, orden",
                    "(puede_tener.specimen ='" + orden + "' AND puede_tener.specimen = "
                    + "orden.specimen AND puede_tener.codigoError = error.codigoError)");

            r.beforeFirst();
            if (r.next()) {
                for (i = 0; i < filas; i++) {
                    if (primeraVez) {
                        ((DefaultTableModel) errores.getModel()).setRowCount(errores.getRowCount() + 1);// agrega filas dinamicamente
                    }
                    for (j = 0; j < 6; j++) {
                        //fila,colummna
                        switch (j) {
                            case 0:
                                errores.setValueAt(r.getString("puede_tener.codigoError"), i, j);
                                break;
                            case 1:
                                errores.setValueAt(r.getString("error.nombreError"), i, j);
                                break;
                            case 2:
                                errores.setValueAt(r.getString("orden.comentarioAuditor"), i, j);
                                break;
                            case 3:
                                errores.setValueAt("", i, j);//recurrencia
                                break;
                            case 4:
                                if (r.getString("error.aprobado").equals("1")) {
                                    errores.setValueAt("SI", i, j);
                                } else {
                                    errores.setValueAt("NO", i, j);
                                }
                                break;
                            case 5:
                                errores.setValueAt(r.getString("puede_tener.idPuedeTener"), i, j);

                        }
                    }
                    r.next();
                }
            }
            u.cerrarConexionBase();
        } catch (SQLException | NumberFormatException e) {
            u.cerrarConexionBase();
        } 
    }

    private void llenarOrdenes(String registros, String datos, boolean primeraVez) {
        int i, j, filas;//i fila j colummna  
        String tipo = registros, dato = datos;
        String campos, tablas, condicion, cam;
        ResultSet r;
        if (fechaHoy.isEmpty()) {
            fechaHoy = c.get(Calendar.YEAR) + "-" + (c.get(Calendar.MONTH) + 1) + "-" + c.get(Calendar.DATE);
        }
        switch (tipo) {
            default:
                campos = "count(*) as filas";
                tablas = "procesa_audita b";
                condicion = "tipoOperacion=2 AND DATE(fecha)=curdate()";
                cam = "fecha,specimen,(SELECT user from procesa_audita WHERE specimen = b.specimen limit 1) as agente";
                break;

            case "specimen":
                limpiarTabla(listaOrdenes);
                campos = "count(*) as filas";
                tablas = "procesa_audita b";
                condicion = "tipoOperacion=2 and specimen='" + dato + "'";
                cam = "fecha,specimen,(SELECT user from procesa_audita WHERE specimen = b.specimen limit 1) as agente";
                break;

            case "user":
                limpiarTabla(listaOrdenes);
                campos = "count(*) as filas";
                tablas = "procesa_audita b";
                condicion = "tipoOperacion=2 and user='" + dato + "'and DATE(fecha)=curdate()";
                cam = "fecha,specimen,(SELECT user from procesa_audita WHERE specimen = b.specimen limit 1) as agente";
                break;

        }
        try {
            r = u.seleccionar(campos, tablas, condicion);
            filas = Integer.parseInt(r.getString("filas"));
            u.cerrarConexionBase();
            r = u.seleccionar(cam, tablas, condicion);
            r.beforeFirst();
            if (r.next()) {
                for (i = 0; i < filas; i++) {
                    if (primeraVez) {
                        ((DefaultTableModel) listaOrdenes.getModel()).setRowCount(listaOrdenes.getRowCount() + 1);// agrega filas dinamicamente
                    }
                    for (j = 0; j < 3; j++) {
                        //fila,colummna
                        switch (j) {
                            case 0:
                                listaOrdenes.setValueAt(r.getString("fecha"), i, j);
                                break;
                            case 1:
                                listaOrdenes.setValueAt(r.getString("specimen"), i, j);
                                break;
                            case 2:
                                //ResultSet rUsuario = u.seleccionar("user", "procesa_audita", "specimen='" + r.getString("specimen") + "' AND tipoOperacion=1");
                                listaOrdenes.setValueAt(r.getString("agente"), i, j);
                                break;

                        }
                    }
                    r.next();
                }
                u.cerrarConexionBase();
            }
        } catch (SQLException | NumberFormatException e) {
        }
    }

    public void limpiarTabla(JTable tabla) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }

}
