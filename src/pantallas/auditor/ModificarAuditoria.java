
package pantallas.auditor;

import pantallas.auditor.EliminarAuditoria;
import pantallas.auditor.MostrarErrores;
import pantallas.auditor.AuditoriaDeOrdenes;
import clases.Orden;
import clases.Usuario;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.text.SimpleDateFormat;
import pantallas.general.MenuPpal;
import pantallas.mensajeria.NotificacionNueva;
import pantallas.mensajeria.errorNuevo;





public class ModificarAuditoria extends javax.swing.JFrame {
    public Calendar c;
    private Usuario u;
    TextAutoCompleter codiErrorAC;
    public boolean contieneResultados=false;
    public NotificacionNueva n;
    public errorNuevo e;
    String specimen="";
    String fechaHoy="";
    
    public ModificarAuditoria(Usuario u, NotificacionNueva n, errorNuevo e) {
         c = Calendar.getInstance();
        this.u = new Usuario();
        this.u.setUser(u.getUser());
        this.u.setNombreUsuario(u.getNombreUsuario());
        this.u.setListaTiposUsuario(u.getListaTiposUsuario());
        this.e = e;
        this.n = n;
        initComponents();
        fecha.setEnabled(false);
        desc_text.setLineWrap(true);
        desc_text.setWrapStyleWord(true);
        comentario_txt.setLineWrap(true);
        descripcion.setLineWrap(true);
        descripcion.setWrapStyleWord(true);
        comentario_txt.setWrapStyleWord(true);
        llenarOrdenes("todo",null,true);
        setSize(1024, 680);
        setLocationRelativeTo(null);
        noAprobado.setVisible(false);
        codiErrorAC = new TextAutoCompleter( codiError );
        autocompletar();

        
    }

    public ModificarAuditoria() {
           }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        busqueda = new javax.swing.ButtonGroup();
        agregarError = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spec = new javax.swing.JTextField();
        usuario = new javax.swing.JTextField();
        codiError = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        aceptar = new javax.swing.JToggleButton();
        cerrar = new javax.swing.JToggleButton();
        resultados = new javax.swing.JCheckBox();
        ed_button_viewError2 = new javax.swing.JButton();
        errorLabo = new javax.swing.JCheckBox();
        enviarMail = new javax.swing.JFrame();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        para = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        asunto = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        mensaje = new javax.swing.JTextArea();
        header = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        footer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ordenesAuditadas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaOrdenes = new javax.swing.JTable();
        buscarSpecimen = new javax.swing.JRadioButton();
        buscarUser = new javax.swing.JRadioButton();
        buscar = new javax.swing.JTextField();
        buscar_btn = new javax.swing.JToggleButton();
        fechaRadio = new javax.swing.JRadioButton();
        fecha = new com.toedter.calendar.JDateChooser();
        erroresDeOrden = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        errores = new javax.swing.JTable();
        detallesError = new javax.swing.JPanel();
        codError = new javax.swing.JLabel();
        codError_text = new javax.swing.JTextField();
        desc = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        desc_text = new javax.swing.JTextArea();
        recurrencia_text = new javax.swing.JTextField();
        comentario = new javax.swing.JLabel();
        recurrencia = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        comentario_txt = new javax.swing.JTextArea();
        noAprobado = new javax.swing.JLabel();
        botones = new javax.swing.JPanel();
        borrar = new javax.swing.JToggleButton();
        cancelar = new javax.swing.JToggleButton();
        modificar = new javax.swing.JToggleButton();
        agregar = new javax.swing.JToggleButton();

        agregarError.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        agregarError.setTitle("Agregar Error a Orden");
        agregarError.setMinimumSize(new java.awt.Dimension(350, 350));
        setLocationRelativeTo(null);

        jLabel4.setText("Specimen:");

        jLabel5.setText("User:");

        jLabel6.setText("Codigo Error:");

        jLabel7.setText("Nombre del error:");

        spec.setEditable(false);
        spec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specActionPerformed(evt);
            }
        });

        usuario.setEditable(false);

        codiError.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codiErrorKeyReleased(evt);
            }
        });

        descripcion.setEditable(false);
        descripcion.setColumns(20);
        descripcion.setLineWrap(true);
        descripcion.setRows(5);
        jScrollPane5.setViewportView(descripcion);

        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        cerrar.setText("Cancelar");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        resultados.setText("Tiene resultado");
        resultados.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                resultadosStateChanged(evt);
            }
        });
        resultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosActionPerformed(evt);
            }
        });
        resultados.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                resultadosPropertyChange(evt);
            }
        });

        ed_button_viewError2.setText("Mostrar codigos");
        ed_button_viewError2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ed_button_viewError2ActionPerformed(evt);
            }
        });

        errorLabo.setText("Error de Laboratorio");

        javax.swing.GroupLayout agregarErrorLayout = new javax.swing.GroupLayout(agregarError.getContentPane());
        agregarError.getContentPane().setLayout(agregarErrorLayout);
        agregarErrorLayout.setHorizontalGroup(
            agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarErrorLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(agregarErrorLayout.createSequentialGroup()
                        .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agregarErrorLayout.createSequentialGroup()
                                .addComponent(codiError, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(errorLabo))
                            .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(agregarErrorLayout.createSequentialGroup()
                                .addComponent(spec, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(resultados))
                            .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ed_button_viewError2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        agregarErrorLayout.setVerticalGroup(
            agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultados))
                .addGap(18, 18, 18)
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(codiError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabo))
                .addGap(7, 7, 7)
                .addComponent(ed_button_viewError2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(32, 32, 32)
                .addGroup(agregarErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptar)
                    .addComponent(cerrar))
                .addGap(40, 40, 40))
        );

        enviarMail.setTitle("Enviar Email");
        enviarMail.setMinimumSize(new java.awt.Dimension(336, 440));
        enviarMail.setResizable(false);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 255));
        jLabel21.setText("Esta orden contiene resultados");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel22.setText("Debe Notificar al laboratorio que esta orden contiene errores.");

        jLabel23.setText(" Se enviara el siguiente correo:");

        jLabel24.setText("Para:");

        para.setEditable(false);
        para.setMaximumSize(new java.awt.Dimension(225, 20));
        para.setMinimumSize(new java.awt.Dimension(225, 20));
        para.setPreferredSize(new java.awt.Dimension(225, 20));
        para.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paraActionPerformed(evt);
            }
        });

        jLabel25.setText("Asunto:");

        asunto.setMaximumSize(new java.awt.Dimension(225, 20));
        asunto.setMinimumSize(new java.awt.Dimension(225, 20));
        asunto.setPreferredSize(new java.awt.Dimension(225, 20));

        jLabel26.setText("Mensaje:");

        jButton1.setText("Enviar Correo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar Envio");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        mensaje.setColumns(20);
        mensaje.setLineWrap(true);
        mensaje.setRows(5);
        jScrollPane7.setViewportView(mensaje);

        javax.swing.GroupLayout enviarMailLayout = new javax.swing.GroupLayout(enviarMail.getContentPane());
        enviarMail.getContentPane().setLayout(enviarMailLayout);
        enviarMailLayout.setHorizontalGroup(
            enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enviarMailLayout.createSequentialGroup()
                .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(enviarMailLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, enviarMailLayout.createSequentialGroup()
                                    .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel25)
                                        .addComponent(jLabel24))
                                    .addGap(18, 18, 18)
                                    .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(asunto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(para, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(enviarMailLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel21))
                    .addGroup(enviarMailLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        enviarMailLayout.setVerticalGroup(
            enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enviarMailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(para, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(enviarMailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de Auditorias - Modificar Auditoria");
        setBackground(new java.awt.Color(236, 236, 236));
        setResizable(false);

        header.setBackground(new java.awt.Color(60, 117, 207));

        jPanel2.setBackground(new java.awt.Color(47, 63, 79));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(Integer.toString(c.get(Calendar.DATE))+"-"+Integer.toString(c.get(Calendar.MONTH)+1)+"-"+Integer.toString(c.get(Calendar.YEAR)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        try{
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo());
        }catch(Exception e){
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo());
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        jPanel3.setBackground(new java.awt.Color(94, 112, 144));
        jPanel3.setForeground(new java.awt.Color(94, 112, 144));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Gestión de Auditorias - Modificar Auditorias ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Logo HMCR.jpg"))); // NOI18N

        jButton12.setBackground(new java.awt.Color(60, 117, 207));
        jButton12.setForeground(new java.awt.Color(60, 117, 207));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1378460112_home.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Menú principal");

        jButton10.setBackground(new java.awt.Color(60, 117, 207));
        jButton10.setForeground(new java.awt.Color(60, 117, 207));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizarRegistroOrden.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Modificar Auditoria");

        jButton6.setBackground(new java.awt.Color(60, 117, 207));
        jButton6.setForeground(new java.awt.Color(60, 117, 207));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elimarRegistroOrden.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Eliminar Auditoria");

        jButton13.setBackground(new java.awt.Color(60, 117, 207));
        jButton13.setForeground(new java.awt.Color(60, 117, 207));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Actions-insert-table-icon.png"))); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Auditar Ordenes");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(headerLayout.createSequentialGroup()
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(headerLayout.createSequentialGroup()
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        footer.setBackground(new java.awt.Color(94, 112, 144));
        footer.setForeground(new java.awt.Color(94, 112, 144));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Universidad de El Salvador ©Copyright 2013 ");

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        ordenesAuditadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Ordenes Auditadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        ordenesAuditadas.setPreferredSize(new java.awt.Dimension(275, 397));

        listaOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Specimen", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOrdenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaOrdenes);
        if (listaOrdenes.getColumnModel().getColumnCount() > 0) {
            listaOrdenes.getColumnModel().getColumn(0).setMinWidth(75);
            listaOrdenes.getColumnModel().getColumn(0).setPreferredWidth(75);
            listaOrdenes.getColumnModel().getColumn(0).setMaxWidth(75);
            listaOrdenes.getColumnModel().getColumn(1).setMinWidth(80);
            listaOrdenes.getColumnModel().getColumn(1).setPreferredWidth(80);
            listaOrdenes.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        busqueda.add(buscarSpecimen);
        buscarSpecimen.setSelected(true);
        buscarSpecimen.setText("Specimen");
        buscarSpecimen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarSpecimenActionPerformed(evt);
            }
        });

        busqueda.add(buscarUser);
        buscarUser.setText("User");
        buscarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUserActionPerformed(evt);
            }
        });

        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        buscar_btn.setText("Buscar");
        buscar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_btnActionPerformed(evt);
            }
        });

        busqueda.add(fechaRadio);
        fechaRadio.setText("Fecha");
        fechaRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fechaRadioItemStateChanged(evt);
            }
        });
        fechaRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaRadioActionPerformed(evt);
            }
        });

        fecha.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout ordenesAuditadasLayout = new javax.swing.GroupLayout(ordenesAuditadas);
        ordenesAuditadas.setLayout(ordenesAuditadasLayout);
        ordenesAuditadasLayout.setHorizontalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                        .addComponent(buscarSpecimen)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buscarUser))
                                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                        .addGap(0, 1, Short.MAX_VALUE)
                                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                        .addComponent(fechaRadio)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buscar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        ordenesAuditadasLayout.setVerticalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarSpecimen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscarUser)
                    .addComponent(fechaRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscar_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        erroresDeOrden.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Errores en la Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        errores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Error", "Nombre del Error", "Comentario", "Recurrencia", "Aprobado", "id"
            }
        ));
        errores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                erroresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(errores);
        if (errores.getColumnModel().getColumnCount() > 0) {
            errores.getColumnModel().getColumn(0).setMinWidth(90);
            errores.getColumnModel().getColumn(0).setPreferredWidth(90);
            errores.getColumnModel().getColumn(0).setMaxWidth(90);
            errores.getColumnModel().getColumn(1).setMinWidth(200);
            errores.getColumnModel().getColumn(1).setPreferredWidth(200);
            errores.getColumnModel().getColumn(1).setMaxWidth(200);
            errores.getColumnModel().getColumn(2).setMinWidth(200);
            errores.getColumnModel().getColumn(2).setPreferredWidth(200);
            errores.getColumnModel().getColumn(2).setMaxWidth(200);
            errores.getColumnModel().getColumn(3).setMinWidth(90);
            errores.getColumnModel().getColumn(3).setPreferredWidth(90);
            errores.getColumnModel().getColumn(3).setMaxWidth(90);
            errores.getColumnModel().getColumn(4).setMinWidth(90);
            errores.getColumnModel().getColumn(4).setPreferredWidth(90);
            errores.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        javax.swing.GroupLayout erroresDeOrdenLayout = new javax.swing.GroupLayout(erroresDeOrden);
        erroresDeOrden.setLayout(erroresDeOrdenLayout);
        erroresDeOrdenLayout.setHorizontalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(erroresDeOrdenLayout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        erroresDeOrdenLayout.setVerticalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(erroresDeOrdenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        detallesError.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalles del Error", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        codError.setText("Codigo de Error:");

        codError_text.setEditable(false);
        codError_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codError_textActionPerformed(evt);
            }
        });

        desc.setText("Nombre del Error:");

        desc_text.setEditable(false);
        desc_text.setColumns(20);
        desc_text.setRows(5);
        jScrollPane3.setViewportView(desc_text);

        recurrencia_text.setEditable(false);

        comentario.setText("Comentario:");

        recurrencia.setText("Recurrencia del Error:");

        comentario_txt.setEditable(false);
        comentario_txt.setColumns(20);
        comentario_txt.setRows(5);
        jScrollPane4.setViewportView(comentario_txt);

        noAprobado.setForeground(new java.awt.Color(204, 51, 0));
        noAprobado.setText("NOTA:Este error no has sido aprobado por el getente.");

        javax.swing.GroupLayout detallesErrorLayout = new javax.swing.GroupLayout(detallesError);
        detallesError.setLayout(detallesErrorLayout);
        detallesErrorLayout.setHorizontalGroup(
            detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codError)
                    .addGroup(detallesErrorLayout.createSequentialGroup()
                        .addComponent(desc)
                        .addGap(54, 54, 54)
                        .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codError_text, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(detallesErrorLayout.createSequentialGroup()
                        .addComponent(recurrencia)
                        .addGap(35, 35, 35)
                        .addComponent(recurrencia_text, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(detallesErrorLayout.createSequentialGroup()
                        .addComponent(comentario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detallesErrorLayout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(noAprobado)
                .addGap(209, 209, 209))
        );
        detallesErrorLayout.setVerticalGroup(
            detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(codError)
                        .addComponent(recurrencia)
                        .addComponent(codError_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(recurrencia_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(detallesErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desc)
                    .addComponent(comentario)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noAprobado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        borrar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        borrar.setText("Borrar Error");
        borrar.setEnabled(false);
        borrar.setMaximumSize(new java.awt.Dimension(145, 27));
        borrar.setMinimumSize(new java.awt.Dimension(145, 27));
        borrar.setPreferredSize(new java.awt.Dimension(145, 27));
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setEnabled(false);
        cancelar.setMaximumSize(new java.awt.Dimension(145, 27));
        cancelar.setMinimumSize(new java.awt.Dimension(145, 27));
        cancelar.setPreferredSize(new java.awt.Dimension(145, 27));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        modificar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        modificar.setText("Modificar Error");
        modificar.setEnabled(false);
        modificar.setMaximumSize(new java.awt.Dimension(145, 27));
        modificar.setMinimumSize(new java.awt.Dimension(145, 27));
        modificar.setPreferredSize(new java.awt.Dimension(145, 27));
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        agregar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        agregar.setText("Agregar Error");
        agregar.setEnabled(false);
        agregar.setMaximumSize(new java.awt.Dimension(145, 27));
        agregar.setMinimumSize(new java.awt.Dimension(145, 27));
        agregar.setPreferredSize(new java.awt.Dimension(145, 27));
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesLayout = new javax.swing.GroupLayout(botones);
        botones.setLayout(botonesLayout);
        botonesLayout.setHorizontalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        botonesLayout.setVerticalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ordenesAuditadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(detallesError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(erroresDeOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(footer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(erroresDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detallesError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ordenesAuditadas, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        recordar();
        new MenuPpal(u,false,this.n,this.e).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        recordar();
        new ModificarAuditoria(u,this.n,this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       recordar();
        new EliminarAuditoria(u,this.n,this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
       // new AgregarUsuario(u,this.n,this.e).setVisible(true);
        recordar();
        new AuditoriaDeOrdenes(u,this.n,this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
       if(codError_text.getText().equals(""))
           JOptionPane.showMessageDialog(null, "Debe seleccionar un error", "Error",JOptionPane.ERROR_MESSAGE);
       else{
        boolean exito=u.actualizar("orden", "comentarioAuditor='"+comentario_txt.getText()+"'",
                "specimen='"+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString()+"'");
        if (exito){
       JOptionPane.showMessageDialog(null,"Se ha actualizado la Orden correctamente.");
       limpiarTabla(errores);
       llenarErrores(listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString(),
               listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString(),true);
       codError_text.setText("");
       desc_text.setText("");
       recurrencia_text.setText("");
       comentario_txt.setText("");
       }
       else
           JOptionPane.showMessageDialog(null,"Lo sentimos. Fallo la eliminacion.");
       }
    }//GEN-LAST:event_modificarActionPerformed

    private void listaOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOrdenesMouseClicked
        recordar();
        String orden = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String user=listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
        limpiarTabla(errores);
        llenarErrores(orden,user,true); 
        borrar.setEnabled(true);
        agregar.setEnabled(true);
        modificar.setEnabled(true);
        cancelar.setEnabled(true);
        
    }//GEN-LAST:event_listaOrdenesMouseClicked

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void buscarSpecimenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarSpecimenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarSpecimenActionPerformed

    private void buscarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarUserActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        spec.setText(listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString());
        usuario.setText(listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString());
        codiError.setText("");
        descripcion.setText("");
        agregarError.setVisible(true);
        agregarError.setLocationRelativeTo(null);
    }//GEN-LAST:event_agregarActionPerformed

    private void codError_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codError_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codError_textActionPerformed

    private void buscar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_btnActionPerformed
        if (fechaRadio.isSelected()){
        try{            
            SimpleDateFormat variableFecha = new SimpleDateFormat("dd-MM-yyyy");  
            String fechaB = variableFecha.format(fecha.getDate());            
                if(fechaB.isEmpty()){
                    fechaHoy="";
                }
                else{
                    fechaHoy=u.fechaCorrecta(fechaB);
                }
            
    }catch(Exception e){
                    
                    
    }finally{
                    limpiarTabla(listaOrdenes);
                    llenarOrdenes("todo",null,true);
        }
        }else{
        if (buscar.getText().equals("")){
            limpiarTabla(listaOrdenes);
            llenarOrdenes("todo",null,true);
            
        }
        else{
            if (buscarSpecimen.isSelected()){
                llenarOrdenes("specimen",buscar.getText(), true);}
            else
                llenarOrdenes("user",buscar.getText(),true);
        }}
        
    }//GEN-LAST:event_buscar_btnActionPerformed

    private void erroresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_erroresMouseClicked
        codError_text.setEditable(false);
        desc_text.setEditable(false);
        recurrencia_text.setEditable(false);
        comentario_txt.setEditable(true);
        codError_text.setText(errores.getValueAt(errores.getSelectedRow(), 0).toString());
        desc_text.setText(errores.getValueAt(errores.getSelectedRow(), 1).toString());
        comentario_txt.setText(errores.getValueAt(errores.getSelectedRow(), 2).toString());
        recurrencia_text.setText(errores.getValueAt(errores.getSelectedRow(), 3).toString());
        if(errores.getValueAt(errores.getSelectedRow(), 4).toString().equals("NO"))
            noAprobado.setVisible(true);
        else
            noAprobado.setVisible(false);
    }//GEN-LAST:event_erroresMouseClicked

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        codError_text.setEditable(false);
        desc_text.setEditable(false);
        recurrencia_text.setEditable(false);
        comentario_txt.setEditable(false);
        codError_text.setText("");
        desc_text.setText("");
        comentario_txt.setText("");
        noAprobado.setText("");
        cancelar.setEnabled(false);
        modificar.setEnabled(false);
        borrar.setEnabled(false);
        agregar.setEnabled(false);
        limpiarTabla(errores);
                                        
    }//GEN-LAST:event_cancelarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
       
        ResultSet res;
        if(codError_text.getText().equals(""))
           JOptionPane.showMessageDialog(null, "Debe seleccionar un error", "Error",JOptionPane.ERROR_MESSAGE);
       else{//si se selecciono un error
        DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
        String strFechaActual;
        strFechaActual = df.format(new java.util.Date());
        int idMen=0,apro=1, labo=0;  ;
        //borrar error de la base
        res=u.seleccionar("mensaje.idMensaje", 
                   "mensaje, puede_tener",
                   "puede_tener.codigoError =  '"+codError_text.getText()+
                   "' AND puede_tener.user =  '"+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString()+
                   "' AND mensaje.idMensaje = puede_tener.idMensaje");
            try {
                if(res.first()){  
                   idMen=res.getInt("mensaje.idMensaje");//guardo el idMensaje para reutilizarlo                   
                }
            } catch (SQLException ex) {
                Logger.getLogger(EliminarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            res=u.seleccionar("errorLaboratorio", "puede_tener", "codigoError='"+codError_text.getText()+
               "' AND user='"+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString()+"'");
            try { 
                labo=res.getInt("errorLaboratorio");//guardo si es error de laboratorio antes de eliminar
            } catch (SQLException ex) {
                Logger.getLogger(ModificarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        boolean exito= u.borrar("puede_tener","idPuedeTener=\""+errores.getValueAt(errores.getSelectedRow(), 5).toString()+"\"");
       res=u.seleccionar("aprobado", "error", "codigoError='"+codError_text.getText()+"'");
          
       try {
                apro=res.getInt("aprobado");
            } catch (SQLException ex) {
                Logger.getLogger(ModificarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
            }
       
       if (exito && apro==1 && labo==0){
           res=u.seleccionar("recurrencia", "puede_tener","codigoError='"
                   + ""+codError_text.getText()+"' AND user="
                   + "'"+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString()+"'" );
            try {
                if(res.first())
                         u.actualizar("puede_tener", "recurrencia=(recurrencia-1)","codigoError='"
                         + ""+codError_text.getText()+"' AND user="
                         + "'"+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString()+"'");
            } catch (SQLException ex) {
                Logger.getLogger(ModificarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
            }
           u.borrar("gestiona","idMensaje="+idMen);
           u.borrar("mensaje", "idMensaje="+idMen);//borro la notificacion del error.
            //crear mensaje nuevo
            String valores="'"+idMen+ "',2,'"+strFechaActual+"',"
                    + "'"+c.get(Calendar.HOUR_OF_DAY)+":"+c.get(Calendar.MINUTE)+":"+c.get(Calendar.SECOND)+"',"
                    + "'Se ha eliminado el error:"+codError_text.getText()+" del specimen: "+listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString()+"', 'Error Eliminado!!'";
            u.insertar("mensaje",valores);
            //relacionar mensaje creado con el usuario.
            u.insertar("gestiona","NULL,'"+idMen+"','"
                    +listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString()+"',"
                    + "0,0,0");
              
            JOptionPane.showMessageDialog(null,"Se ha eliminado el error.Se notificara al agente.");
       
       }
       else{
           if (!exito)
                JOptionPane.showMessageDialog(null,"Lo sentimos. Fallo la eliminacion.");
           else
               JOptionPane.showMessageDialog(null,"Se ha eliminado el error.Se notificara al agente.");
       }       
       limpiarTabla(errores);
       llenarErrores(listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString(),
               listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString(),true);
       }
    }//GEN-LAST:event_borrarActionPerformed

    private void specActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
    boolean errorDeLab;
    contieneResultados=resultados.isSelected();
    resultados.setSelected(false);
    specimen=spec.getText();
        if(codiError.getText().equals(""))
    JOptionPane.showMessageDialog(null,"Debe ingresar un codigo de error");
    else{
            if(errorLabo.isSelected())
                errorDeLab=true;
            else
                errorDeLab=false;
        Orden o=new Orden(spec.getText(),errorDeLab,usuario.getText(),
                codiError.getText(),descripcion.getText() );
        boolean exito  =o.agregarError(false,"");
        if (exito){
        String orden = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String user=listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
        limpiarTabla(errores);
        llenarErrores(orden,user,true); 
        codiError.setText("");
        descripcion.setText("");
        //JOptionPane.showMessageDialog(null,"El error ha sido agregado a la orden");
        }
        
}
    }//GEN-LAST:event_aceptarActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        agregarError.dispose();
    }//GEN-LAST:event_cerrarActionPerformed

    private void resultadosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_resultadosStateChanged
       
    }//GEN-LAST:event_resultadosStateChanged

    private void resultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosActionPerformed
        if(resultados.isSelected())
            JOptionPane.showMessageDialog(null,"Recuerde que debe notificar del error por correo electronico");        // TODO add your handling code here:
    }//GEN-LAST:event_resultadosActionPerformed

    private void resultadosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_resultadosPropertyChange
           
    }//GEN-LAST:event_resultadosPropertyChange

    private void codiErrorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codiErrorKeyReleased
     
        /*evento que permite la busqueda de codigo de un error y retorna en
         * un Jlabel la aproximacion o codigo que mas se asemeje al que se esta digitando
         */
        ResultSet r;

        if (codiError.getText().isEmpty()||codiError.getText().length()<5) {
            descripcion.setText("");
        } else {
            try {
                r = u.seleccionar("nombreError", "error", 
                        "codigoError= '" + codiError.getText() + "'");
                this.descripcion.setText(r.getString("nombreError"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Codigo no registrado", "", JOptionPane.ERROR_MESSAGE);
                //ed_text_codError.setText("");
            }
        }
    }//GEN-LAST:event_codiErrorKeyReleased

    private void ed_button_viewError2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ed_button_viewError2ActionPerformed
        new MostrarErrores().setVisible(true);
        
    }//GEN-LAST:event_ed_button_viewError2ActionPerformed

    private void paraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paraActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(para.getText().equals("")||asunto.getText().equals("")||para.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos", "Error!!!", JOptionPane.ERROR_MESSAGE);
        }
        else{
            u.setPara(para.getText());
            u.setAsunto(asunto.getText());
            u.setMensaje(mensaje.getText());
            if(u.enviarEmail() ) {
                JOptionPane.showMessageDialog(null,"Mensaje enviado!");
                enviarMail.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null,"Por el momento NO SE PUDO ENVIAR el mensaje.");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(null, "Recuerde que debe notificar al laboratorio,"
            + "¿Esta seguro que no desea enviar el correo?\n Presione No para volver al envio del correo. presione Si para confirmar.", "Enviar Correo",
            JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (respuesta==0){
            enviarMail.setVisible(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fechaRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaRadioActionPerformed

    private void fechaRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fechaRadioItemStateChanged
        if(fechaRadio.isSelected()){
            buscar.setEnabled(false);
            fecha.setEnabled(true);}
        else{
            fecha.setEnabled(false);
        buscar.setEnabled(true);
        }
    }//GEN-LAST:event_fechaRadioItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton aceptar;
    private javax.swing.JToggleButton agregar;
    private javax.swing.JFrame agregarError;
    private javax.swing.JTextField asunto;
    private javax.swing.JToggleButton borrar;
    private javax.swing.JPanel botones;
    private javax.swing.JTextField buscar;
    private javax.swing.JRadioButton buscarSpecimen;
    private javax.swing.JRadioButton buscarUser;
    private javax.swing.JToggleButton buscar_btn;
    private javax.swing.ButtonGroup busqueda;
    private javax.swing.JToggleButton cancelar;
    private javax.swing.JToggleButton cerrar;
    private javax.swing.JLabel codError;
    private javax.swing.JTextField codError_text;
    private javax.swing.JTextField codiError;
    private javax.swing.JLabel comentario;
    private javax.swing.JTextArea comentario_txt;
    private javax.swing.JLabel desc;
    private javax.swing.JTextArea desc_text;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JPanel detallesError;
    private javax.swing.JButton ed_button_viewError2;
    private javax.swing.JFrame enviarMail;
    private javax.swing.JCheckBox errorLabo;
    private javax.swing.JTable errores;
    private javax.swing.JPanel erroresDeOrden;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JRadioButton fechaRadio;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable listaOrdenes;
    private javax.swing.JTextArea mensaje;
    private javax.swing.JToggleButton modificar;
    private javax.swing.JLabel noAprobado;
    private javax.swing.JPanel ordenesAuditadas;
    private javax.swing.JTextField para;
    private javax.swing.JLabel recurrencia;
    private javax.swing.JTextField recurrencia_text;
    private javax.swing.JCheckBox resultados;
    private javax.swing.JTextField spec;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables

    private void llenarErrores(String orden, String user, boolean primeraVez) {
       int i, j, filas;//i fila j colummna  
       String specimen=orden, usuario=user;
        ResultSet r, rs;

        try {
            r = u.seleccionar("count(*) as filas", "puede_tener", "specimen='"+specimen+"' AND errorLaboratorio=0");
            filas = Integer.parseInt(r.getString("filas"));
            r = u.seleccionar("puede_tener.idPuedeTener,puede_tener.codigoError, Error.nombreError, "
                    + "orden.comentarioAuditor, error.aprobado","puede_tener, error, orden",
                    "(puede_tener.specimen ="+specimen+" AND puede_tener.specimen = "
                    + "orden.specimen AND puede_tener.codigoError = error.codigoError AND puede_tener.errorLaboratorio=0)");

            r.beforeFirst();
            if (r.next()) {               
            for (i = 0; i < filas; i++) {
                if(primeraVez)
                    ((DefaultTableModel) errores.getModel()).setRowCount(errores.getRowCount() + 1);// agrega filas dinamicamente
                for (j = 0; j < 6; j++) {
                    //fila,colummna
                    switch (j) {
                        case 0:
                            errores.setValueAt(r.getString("puede_tener.codigoError"), i, j);
                            break;
                        case 1:
                            errores.setValueAt(r.getString("error.nombreError"), i, j);
                            break;
                        case 2:
                            errores.setValueAt(r.getString("orden.comentarioAuditor"), i, j);
                            break;
                        case 3:
                            rs=u.seleccionar("recurrencia", "puede_tener",
                                    "specimen= '"+specimen+"' AND codigoError='"
                                    + ""+r.getString("puede_tener.codigoError")+"' AND errorLaboratorio=0");
                           
                            rs.first();
                            errores.setValueAt(rs.getString("recurrencia"), i, j);
                            break;
                        case 4:
                            if(r.getString("error.aprobado").equals("1"))
                                errores.setValueAt("SI", i, j);
                            else
                                errores.setValueAt("NO", i, j);
                            break;                                   
                        case 5:
                            errores.setValueAt(r.getString("puede_tener.idPuedeTener"), i, j);
                        
                    }
                }
                r.next();
            }
            }
            else{
                JOptionPane.showMessageDialog(null, "No se encontraron registros");
                noAprobado.setVisible(false);
                codError_text.setText("");
                codError_text.setEditable(false);
                desc_text.setText("");
                desc_text.setEditable(false);
                recurrencia_text.setText("");
                recurrencia_text.setEditable(false);
                comentario_txt.setText("");
                comentario_txt.setEditable(false);
            
            }
            u.getSentencia().close();
        } catch (SQLException | NumberFormatException e) {
        }
    }
    
    private void llenarOrdenes(String registros, String datos, boolean primeraVez) {
       int i, j, filas=0;//i fila j colummna 

       String tipo=registros, dato=datos;
       String campos,tablas,condicion,cam;
         ResultSet r;
         if (fechaHoy.isEmpty())
            fechaHoy=c.get(Calendar.YEAR)+"-"+(c.get(Calendar.MONTH)+1)+"-"+c.get(Calendar.DATE);
         switch (tipo){
             default:
                campos="count(*) as filas";
                tablas="procesa_audita";
                condicion="tipoOperacion=2 AND DATE(fecha)='"+fechaHoy+"'";
                cam="*";
            break;
        
        case "specimen":
            limpiarTabla(listaOrdenes);
            campos="count(*) as filas";
            tablas="procesa_audita";
            condicion="tipoOperacion=2 and specimen='"+dato+"'";
            cam="*";
           break;
        
        case "user"://esta no se como hacerla
            limpiarTabla(listaOrdenes);
            campos="count(*) as filas";
            tablas="procesa_audita";
            condicion="tipoOperacion=1 and user='"+dato+"'";
            cam="*";
            break;    
   
    }
        try {
            r=u.seleccionar(campos, tablas, condicion);
            filas = Integer.parseInt(r.getString("filas"));
            r=u.seleccionar(cam, tablas, condicion);        
            r.beforeFirst();
            if (r.next()) {
            for (i = 0; i < filas; i++) {
                if (primeraVez){
                    ((DefaultTableModel) listaOrdenes.getModel()).setRowCount(listaOrdenes.getRowCount() + 1);}// agrega filas dinamicamente
                for (j = 0; j < 3; j++) {
                
                    //fila,colummna
                    switch (j) {
                        case 0:
                            listaOrdenes.setValueAt(r.getDate("fecha").toString(), i, j);
                            break;
                        case 1:
                            listaOrdenes.setValueAt(r.getString("specimen"), i, j);
                            break;
                        case 2:{
                            ResultSet rUsuario=u.seleccionar("user", "procesa_audita", "specimen='"+r.getString("specimen")+"' AND tipoOperacion=1");
                            listaOrdenes.setValueAt(rUsuario.getString("user"), i, j);
                            break;
                        }
                  
                    }
                }
                r.next();
            }
            fechaHoy="";
            }
            else{
                JOptionPane.showMessageDialog(null, "No se encontraron registros");
                if(!tipo.equals("todo"))
                    llenarOrdenes("todo",null,true);
            }
            u.getSentencia().close();
        } catch (SQLException | NumberFormatException e) {
        }
    }
    
    public void limpiarTabla(JTable tabla){
        try {
            DefaultTableModel modelo=(DefaultTableModel) tabla.getModel();
            int filas=tabla.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }

    private void autocompletar() {
        ResultSet r;
        r=u.seleccionar("codigoError", "Error", "");
        try {
            r.beforeFirst();
            while(r.next()){
            codiErrorAC.addItem(r.getString("codigoError"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ModificarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void recordar(){
        if (contieneResultados){
            int respuesta = JOptionPane.showConfirmDialog(null, "El Specimen tiene resultados. Recuerde que debe notificar al laboratorio,"
                + "¿Desea enviar el correo en este momento?", "Enviar Correo",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (respuesta==0){
        para.setText("henry_ddl@hotmail.com");
            asunto.setText("Prueba de envio de correo");
            mensaje.setText("Advertencia!!! se encontrarion errores en el specimen "
                    + specimen+"los errores encontrados son: "
                    + "error1, error2,etc.");
            enviarMail.setVisible(true);
            enviarMail.setLocationRelativeTo(null);
        }
        }
        else{
            enviarMail.setVisible(false);
        }
        contieneResultados=false;
    }
}
