/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas.auditor;

import clases.Sistema;
import clases.Usuario;
import clases.Error;
import clases.Orden;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pantallas.general.MenuPpal;
import pantallas.mensajeria.NotificacionNueva;
import pantallas.mensajeria.errorNuevo;

public class GestionarAuditoria extends javax.swing.JFrame {

    public Calendar c;
    private final Usuario u;
    public NotificacionNueva n;
    public errorNuevo e;
    private String fechaHoy = "";
    TextAutoCompleter codigoErrorAC;
    private final ArrayList<Error> listaDeErrores = (new Error()).obtenerErrores();

    public GestionarAuditoria(Usuario u, NotificacionNueva n, errorNuevo e) {
        c = Calendar.getInstance();
        this.u = new Usuario();
        this.u.setUser(u.getUser());
        this.u.setNombreUsuario(u.getNombreUsuario());
        this.u.setListaTiposUsuario(u.getListaTiposUsuario());
        this.e = e;
        this.n = n;
        initComponents();
        codigoErrorAC = new TextAutoCompleter(ed_text_codError);
        autocompletar();
        fecha.setEnabled(false);
        setSize(1024, 680);
        setLocationRelativeTo(null);
    }

    public GestionarAuditoria() {
        c = Calendar.getInstance();
        this.u = new Usuario();
        initComponents();
        setSize(1024, 680);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        busqueda = new javax.swing.ButtonGroup();
        header = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        footer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ordenesAuditadas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaOrdenes = new javax.swing.JTable();
        buscarSpecimen = new javax.swing.JRadioButton();
        buscar = new javax.swing.JTextField();
        buscar_btn = new javax.swing.JToggleButton();
        fechaRadio = new javax.swing.JRadioButton();
        fecha = new com.toedter.calendar.JDateChooser();
        dia = new javax.swing.JRadioButton();
        auditor = new javax.swing.JRadioButton();
        erroresDeOrden = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        errores = new javax.swing.JTable();
        botones = new javax.swing.JPanel();
        borrar = new javax.swing.JToggleButton();
        cancelar = new javax.swing.JToggleButton();
        cancelar1 = new javax.swing.JToggleButton();
        ed_button_iError = new javax.swing.JButton();
        ed_panel_error = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ed_text_codError = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ed_comment_aud = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombreError = new javax.swing.JLabel();
        errorLabo = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Auditoria - Gestión de Auditoria - SIAPO");
        setResizable(false);

        header.setBackground(new java.awt.Color(60, 117, 207));

        jPanel2.setBackground(new java.awt.Color(47, 63, 79));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(Integer.toString(c.get(Calendar.DATE))+"-"+Integer.toString(c.get(Calendar.MONTH)+1)+"-"+Integer.toString(c.get(Calendar.YEAR)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        try{
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo());
        }catch(Exception e){
            jLabel17.setText("No se puede cargar la informacion");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 560, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        jPanel3.setBackground(new java.awt.Color(94, 112, 144));
        jPanel3.setForeground(new java.awt.Color(94, 112, 144));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Auditoria - Gestión de Auditoria ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Logo HMCR.jpg"))); // NOI18N

        jButton12.setBackground(new java.awt.Color(60, 117, 207));
        jButton12.setForeground(new java.awt.Color(60, 117, 207));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1378460112_home.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Menú principal");

        jButton6.setBackground(new java.awt.Color(60, 117, 207));
        jButton6.setForeground(new java.awt.Color(60, 117, 207));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elimarRegistroOrden.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Gestión Auditoria");

        jButton13.setBackground(new java.awt.Color(60, 117, 207));
        jButton13.setForeground(new java.awt.Color(60, 117, 207));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Actions-insert-table-icon.png"))); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Auditar Ordenes");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8))
                    .addGroup(headerLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(headerLayout.createSequentialGroup()
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        footer.setBackground(new java.awt.Color(94, 112, 144));
        footer.setForeground(new java.awt.Color(94, 112, 144));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Universidad de El Salvador ©Copyright "+Sistema.años);

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ordenesAuditadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Ordenes Auditadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        ordenesAuditadas.setPreferredSize(new java.awt.Dimension(275, 397));

        listaOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Specimen", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOrdenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaOrdenes);

        busqueda.add(buscarSpecimen);
        buscarSpecimen.setSelected(true);
        buscarSpecimen.setText("specimen");

        buscar_btn.setText("Buscar");
        buscar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_btnActionPerformed(evt);
            }
        });

        busqueda.add(fechaRadio);
        fechaRadio.setText("fecha");
        fechaRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fechaRadioItemStateChanged(evt);
            }
        });

        fecha.setDateFormatString("dd-MM-yyyy");
        fecha.setEnabled(false);

        busqueda.add(dia);
        dia.setText("del dia");

        busqueda.add(auditor);
        auditor.setText("auditor");

        javax.swing.GroupLayout ordenesAuditadasLayout = new javax.swing.GroupLayout(ordenesAuditadas);
        ordenesAuditadas.setLayout(ordenesAuditadasLayout);
        ordenesAuditadasLayout.setHorizontalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                        .addComponent(buscarSpecimen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(auditor))
                    .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(buscar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        ordenesAuditadasLayout.setVerticalGroup(
            ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenesAuditadasLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarSpecimen)
                    .addComponent(fechaRadio)
                    .addComponent(dia)
                    .addComponent(auditor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ordenesAuditadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(buscar_btn))
        );

        erroresDeOrden.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Errores en la Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        errores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo error", "Error", "Comentario", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(errores);
        if (errores.getColumnModel().getColumnCount() > 0) {
            errores.getColumnModel().getColumn(0).setMinWidth(90);
            errores.getColumnModel().getColumn(0).setPreferredWidth(90);
            errores.getColumnModel().getColumn(0).setMaxWidth(90);
            errores.getColumnModel().getColumn(1).setMinWidth(200);
            errores.getColumnModel().getColumn(1).setPreferredWidth(200);
            errores.getColumnModel().getColumn(1).setMaxWidth(200);
            errores.getColumnModel().getColumn(2).setMinWidth(200);
            errores.getColumnModel().getColumn(2).setPreferredWidth(200);
            errores.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        javax.swing.GroupLayout erroresDeOrdenLayout = new javax.swing.GroupLayout(erroresDeOrden);
        erroresDeOrden.setLayout(erroresDeOrdenLayout);
        erroresDeOrdenLayout.setHorizontalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, erroresDeOrdenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        erroresDeOrdenLayout.setVerticalGroup(
            erroresDeOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(erroresDeOrdenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        borrar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        borrar.setText("Eliminar Auditoria");
        borrar.setMaximumSize(new java.awt.Dimension(145, 27));
        borrar.setMinimumSize(new java.awt.Dimension(145, 27));
        borrar.setPreferredSize(new java.awt.Dimension(145, 27));
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setMaximumSize(new java.awt.Dimension(145, 27));
        cancelar.setMinimumSize(new java.awt.Dimension(145, 27));
        cancelar.setPreferredSize(new java.awt.Dimension(145, 27));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        cancelar1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cancelar1.setText("Eliminar errores");
        cancelar1.setMaximumSize(new java.awt.Dimension(145, 27));
        cancelar1.setMinimumSize(new java.awt.Dimension(145, 27));
        cancelar1.setPreferredSize(new java.awt.Dimension(145, 27));
        cancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar1ActionPerformed(evt);
            }
        });

        ed_button_iError.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ed_button_iError.setText("Ingresar error");
        ed_button_iError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ed_button_iErrorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesLayout = new javax.swing.GroupLayout(botones);
        botones.setLayout(botonesLayout);
        botonesLayout.setHorizontalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ed_button_iError, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        botonesLayout.setVerticalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ed_button_iError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        ed_panel_error.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Error en orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Codigo error:");

        ed_text_codError.setMaximumSize(new java.awt.Dimension(80, 30));
        ed_text_codError.setMinimumSize(new java.awt.Dimension(80, 30));
        ed_text_codError.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ed_text_codErrorKeyReleased(evt);
            }
        });

        ed_comment_aud.setColumns(20);
        ed_comment_aud.setRows(5);
        jScrollPane3.setViewportView(ed_comment_aud);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Comentario:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombre:");

        nombreError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        errorLabo.setText("Error de Laboratorio");
        errorLabo.setEnabled(false);

        javax.swing.GroupLayout ed_panel_errorLayout = new javax.swing.GroupLayout(ed_panel_error);
        ed_panel_error.setLayout(ed_panel_errorLayout);
        ed_panel_errorLayout.setHorizontalGroup(
            ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ed_panel_errorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(errorLabo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ed_panel_errorLayout.createSequentialGroup()
                        .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ed_text_codError, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreError, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ed_panel_errorLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ed_panel_errorLayout.setVerticalGroup(
            ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ed_panel_errorLayout.createSequentialGroup()
                .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ed_text_codError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombreError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ed_panel_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorLabo)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(footer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(ordenesAuditadas, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ed_panel_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(erroresDeOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(erroresDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(ed_panel_error, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ordenesAuditadas, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        new MenuPpal(u, false, this.n, this.e).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new GestionarAuditoria(u, this.n, this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        new AuditoriaDeOrdenes(u, this.n, this.e).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void listaOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOrdenesMouseClicked
        String orden = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String user = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
        u.limpiarTabla(errores);
        llenarErrores(orden, user);
        borrar.setEnabled(true);
        cancelar.setEnabled(true);
    }//GEN-LAST:event_listaOrdenesMouseClicked

    private void buscar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_btnActionPerformed
        if (fechaRadio.isSelected()) {
            try {
                SimpleDateFormat variableFecha = new SimpleDateFormat("dd-MM-yyyy");
                String fechaB = variableFecha.format(fecha.getDate());
                if (fechaB.isEmpty()) {
                    fechaHoy = "";
                } else {
                    fechaHoy = u.fechaCorrecta(fechaB);
                }

            } catch (Exception ex) {

            } finally {
                u.limpiarTabla(listaOrdenes);
                llenarOrdenes("fecha", u.getUser());
            }
        } else {
            if (buscar.getText().equals("") && !dia.isSelected()) {
                JOptionPane.showMessageDialog(null, "No hay nada que buscar", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (buscarSpecimen.isSelected()) {
                    llenarOrdenes("specimen", buscar.getText());
                } else {
                    if (auditor.isSelected()) {
                        llenarOrdenes("user", buscar.getText());
                    } else {
                        llenarOrdenes("", buscar.getText());
                    }
                }
            }
        }

    }//GEN-LAST:event_buscar_btnActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        String spec = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        int resulta;
        resulta = JOptionPane.showConfirmDialog(null, "¿Desea cancelar la auditoria en el specimen: "
                + spec + "?", "Cancelar auditoria",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (resulta == JOptionPane.YES_OPTION) {
            boolean exito = u.borrar("procesa_audita", "specimen='" + spec + "' and user= '" + u.getUser() + "' and tipoOperacion=2");
            if (exito) {
                if (errores.getRowCount() >= 1) {
                    String id = errores.getValueAt(0, 3).toString();
                    exito = u.borrar("puede_tener", "idProcAud=" + id);
                }
                if (exito) {
                    JOptionPane.showMessageDialog(null, "La auditoria ha sido eliminada.");
                    u.limpiarTabla(errores);
                    u.limpiarTabla(listaOrdenes);
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos. Fallo la eliminacion.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Lo sentimos. Fallo la eliminacion.");
            }
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        u.limpiarTabla(errores);
    }//GEN-LAST:event_cancelarActionPerformed

    private void fechaRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fechaRadioItemStateChanged
        if (fechaRadio.isSelected()) {
            buscar.setEnabled(false);
            fecha.setEnabled(true);
        } else {
            fecha.setEnabled(false);
            buscar.setEnabled(true);
        }
    }//GEN-LAST:event_fechaRadioItemStateChanged

    private void cancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar1ActionPerformed
        // TODO add your handling code here:
        String spec = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
        String id = errores.getValueAt(0, 3).toString();
        int resulta;
        resulta = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el(los) error(es) del specimen: "
                + spec + "?", "Errores",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (resulta == JOptionPane.YES_OPTION) {
            boolean exito = u.borrar("puede_tener", "idProcAud=" + id);
            if (exito) {
                u.actualizar("procesa_audita", "tipoProcAud=4", "user='" + u.getUser() + "' and specimen = '" + spec + "' and tipoOperacion=2");
                JOptionPane.showMessageDialog(null, "La el(los) error(es) ha(n) sido eliminado(s).");
                u.limpiarTabla(errores);
                u.limpiarTabla(listaOrdenes);
            } else {
                JOptionPane.showMessageDialog(null, "Lo sentimos. Fallo la eliminacion.");
            }
        }
    }//GEN-LAST:event_cancelar1ActionPerformed

    private void ed_text_codErrorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ed_text_codErrorKeyReleased
        /*evento que permite la busqueda de codigo de un error y retorna en
         * un Jlabel la aproximacion o codigo que mas se asemeje al que se esta digitando
         */
        int ascii = evt.getKeyCode();
        if (ascii == 10) {
            String texto = ed_text_codError.getText();
            if (texto.isEmpty() || texto.length() < 5) {
                nombreError.setText("");
                //                ed_label_descrip.setText("");
                ed_text_codError.setText("");
            } else {
                Error error = new Error();
                error = error.buscarError(listaDeErrores, texto.substring(0, 5));
                if (error != null) {
                    this.nombreError.setText(error.getNombreError());
                    //                    this.ed_label_descrip.setText(error.getDescripcion());
                } else {
                    JOptionPane.showMessageDialog(null, "Codigo no registrado", "", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_ed_text_codErrorKeyReleased

    private void ed_button_iErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ed_button_iErrorActionPerformed
        boolean exito;
        Orden o;
        if (ed_text_codError.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "¡Rellene todos los campos!", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            String nSpecimen = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 1).toString();
            String agente = listaOrdenes.getValueAt(listaOrdenes.getSelectedRow(), 2).toString();
            String codError = ed_text_codError.getText().substring(0,6);
            String nombreErro = nombreError.getText();
            String comentario = ed_comment_aud.getText();
            if (errorLabo.isSelected()) {
                o = new Orden(nSpecimen, true, agente, codError, nombreErro);
                exito = o.agregarError(false, comentario);
            } else {
                o = new Orden(nSpecimen, false, agente, codError, nombreErro);
                exito = o.agregarError(false, comentario);
            }
            if (exito) {
                JOptionPane.showMessageDialog(null, "Se ha agregado el error exitosamente.");
                ed_text_codError.setText("");
                nombreError.setText("");
                //ed_label_descrip.setText("");
                ed_comment_aud.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar el error.");
            }
        }
    }//GEN-LAST:event_ed_button_iErrorActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton auditor;
    private javax.swing.JToggleButton borrar;
    private javax.swing.JPanel botones;
    private javax.swing.JTextField buscar;
    private javax.swing.JRadioButton buscarSpecimen;
    private javax.swing.JToggleButton buscar_btn;
    private javax.swing.ButtonGroup busqueda;
    private javax.swing.JToggleButton cancelar;
    private javax.swing.JToggleButton cancelar1;
    private javax.swing.JRadioButton dia;
    private javax.swing.JButton ed_button_iError;
    private javax.swing.JTextArea ed_comment_aud;
    private javax.swing.JPanel ed_panel_error;
    private javax.swing.JTextField ed_text_codError;
    private javax.swing.JCheckBox errorLabo;
    private javax.swing.JTable errores;
    private javax.swing.JPanel erroresDeOrden;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JRadioButton fechaRadio;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable listaOrdenes;
    private javax.swing.JLabel nombreError;
    private javax.swing.JPanel ordenesAuditadas;
    // End of variables declaration//GEN-END:variables

    private void llenarErrores(String orden, String user) {
        ResultSet r;
        try {
            r = u.seleccionar(" a.codigoError,nombreError,comentarioAuditor,a.idProcAud",
                    "puede_tener a inner join error b on a.codigoError=b.codigoError inner join procesa_audita c on c.idProcAud=a.idProcAud",
                    "user = '" + user + "' and specimen='" + orden + "' and tipoOperacion = 1");
            r.beforeFirst();
            while (r.next()) {
                // Se crea un array que será una de las filas de la tabla.
                Object[] fila = new Object[4]; // Hay cuatro columnas en la tabla
                // Se rellena cada posición del array con una de las columnas de la tabla en base de datos.
                for (int i = 0; i < 4; i++) {
                    fila[i] = r.getObject(i + 1); // El primer indice en rs es el 1, no el cero, por eso se suma 1.
                }
                // Se añade al modelo la fila completa.
                ((DefaultTableModel) errores.getModel()).addRow(fila);
            }
        } catch (SQLException | NumberFormatException ex) {
            System.out.println(ex);
        } finally {
            u.cerrarConexionBase();
        }
    }

    private void llenarOrdenes(String registros, String datos) {
        String tipo = registros, dato = datos;
        String tablas, condicion, cam;
        ResultSet r;
        this.buscar.setText("");
        u.limpiarTabla(listaOrdenes);
        cam = "fecha,specimen,(SELECT user from procesa_audita WHERE specimen = b.specimen order by idProcAud limit 1 ) as agente";
        tablas = "procesa_audita b";
        switch (tipo) {
            default:
                condicion = "tipoOperacion=2 and user='" + u.getUser() + "'and fecha=curdate()";
                break;
            case "specimen":
                condicion = "tipoOperacion=2 and specimen='" + dato + "'";
                break;
            case "user":
                condicion = "tipoOperacion=2 and user='" + dato + "'and fecha=curdate()";
                break;
            case "fecha":
                condicion = "tipoOperacion=2 and user='" + u.getUser() + "'and fecha='" + fechaHoy + "'";
                break;
        }
        try {
            r = u.seleccionar(cam, tablas, condicion);
            r.beforeFirst();
            while (r.next()) {
                // Se crea un array que será una de las filas de la tabla.
                Object[] fila = new Object[3]; // Hay cuatro columnas en la tabla
                // Se rellena cada posición del array con una de las columnas de la tabla en base de datos.
                for (int i = 0; i < 3; i++) {
                    fila[i] = r.getObject(i + 1); // El primer indice en rs es el 1, no el cero, por eso se suma 1.
                }
                // Se añade al modelo la fila completa.
                ((DefaultTableModel) listaOrdenes.getModel()).addRow(fila);
            }
        } catch (SQLException | NumberFormatException ex) {
        } finally {
            u.cerrarConexionBase();
        }
    }

    private void autocompletar() {
        ResultSet r;
        r = u.seleccionar("codigoError,nombreError", "Error", "");
        try {
            r.beforeFirst();
            while (r.next()) {
                codigoErrorAC.addItem(r.getString("codigoError") + " - " + r.getString("nombreError"));
            }
            u.cerrarConexionBase();
        } catch (SQLException ex) {
            //Logger.getLogger(ModificarAuditoria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
