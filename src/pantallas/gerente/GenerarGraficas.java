/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas.gerente;

import pantallas.gerente.ReporteriaEstadisticas;
import clases.Graficas;
import clases.Usuario;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.Calendar;
import javax.swing.JOptionPane;
import org.jfree.chart.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import pantallas.general.MenuPpal;
import pantallas.mensajeria.NotificacionNueva;
import pantallas.mensajeria.errorNuevo;

/**
 *
 * @author familia diaz
 */
public class GenerarGraficas extends javax.swing.JFrame {

    public Calendar c;
    private Usuario u;
    public NotificacionNueva n;
    public errorNuevo e;
    ChartPanel grafica;
    String tipo = "";
    Thread hiloCargando, hiloEjecutando;
    private long inicioDeEnvio;
    private long finDeEnvio;

    public GenerarGraficas(Usuario u, NotificacionNueva n, errorNuevo e, boolean individual) {
        c = Calendar.getInstance();
        this.u = new Usuario();
        this.u.setUser(u.getUser());
        this.u.setUser(u.getUser());
        this.u.setNombreUsuario(u.getNombreUsuario());
        this.u.setListaTiposUsuario(u.getListaTiposUsuario());
        this.e = e;
        this.n = n;
        initComponents();
        mes.setEnabled(false);
        semestre.setEnabled(false);
        cargando.setVisible(false);
        //barra.setStringPainted(true);
        setSize(1024, 680);
        setLocationRelativeTo(null);
        llenarAgentes();

        //esto no lo borro
        if (individual) {
            global.setVisible(false);
            this.individual.setSelected(true);
            tipoGrafica.removeItemAt(5);
            tipoGrafica.removeItemAt(4);
            this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } else {
            agente.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoGlobal = new javax.swing.ButtonGroup();
        rango = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tipoGrafica = new javax.swing.JComboBox();
        global = new javax.swing.JRadioButton();
        individual = new javax.swing.JRadioButton();
        agente = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        mensual = new javax.swing.JRadioButton();
        semestral = new javax.swing.JRadioButton();
        anual = new javax.swing.JRadioButton();
        semestre = new javax.swing.JComboBox();
        mes = new javax.swing.JComboBox();
        generar = new javax.swing.JButton();
        cargando = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelGrafica = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reporteria y Estadisticas - Graficos Individuales y globales - SIAPO");
        setMinimumSize(new java.awt.Dimension(1024, 681));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(60, 117, 207));

        jPanel2.setBackground(new java.awt.Color(47, 63, 79));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(Integer.toString(c.get(Calendar.DATE))+"-"+Integer.toString(c.get(Calendar.MONTH)+1)+"-"+Integer.toString(c.get(Calendar.YEAR)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        try{
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo()+"-"+this.u.getListaTiposUsuario().get(1).getNombreTipo());
        }catch(Exception e){
            jLabel17.setText(this.u.getNombreUsuario()+"-"+this.u.getListaTiposUsuario().get(0).getNombreTipo());
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        jPanel3.setBackground(new java.awt.Color(94, 112, 144));
        jPanel3.setForeground(new java.awt.Color(94, 112, 144));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Reportes y Estadisticas - Graficos individuales y globales");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Logo HMCR.jpg"))); // NOI18N

        jButton12.setBackground(new java.awt.Color(60, 117, 207));
        jButton12.setForeground(new java.awt.Color(60, 117, 207));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1378460112_home.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Men√∫ principal");

        jButton10.setBackground(new java.awt.Color(60, 117, 207));
        jButton10.setForeground(new java.awt.Color(60, 117, 207));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/custom-reports-icon.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(60, 117, 207));
        jButton6.setForeground(new java.awt.Color(60, 117, 207));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/estadisticas.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Generar Reportes");

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Graficos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(94, 112, 144));
        jPanel4.setForeground(new java.awt.Color(94, 112, 144));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Universidad de El Salvador ¬©Copyright 2013 ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalles de la Grafica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        jLabel3.setText("Tipo de Grafica:");

        tipoGrafica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipos de ordenes procesadas", "Errores cometidos", "Tendencia de errores", "Total ordenes completas", "Relacion orden auditada/orden", "Ordenes completas por agente" }));
        tipoGrafica.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoGraficaItemStateChanged(evt);
            }
        });
        tipoGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoGraficaActionPerformed(evt);
            }
        });

        grupoGlobal.add(global);
        global.setText("Global");
        global.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                globalActionPerformed(evt);
            }
        });

        grupoGlobal.add(individual);
        individual.setText("Individual");
        individual.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                individualStateChanged(evt);
            }
        });
        individual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                individualItemStateChanged(evt);
            }
        });
        individual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                individualActionPerformed(evt);
            }
        });
        individual.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                individualPropertyChange(evt);
            }
        });

        jLabel4.setText("Sleccione rango de tiempo:");

        rango.add(mensual);
        mensual.setText("Mensual");
        mensual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mensualItemStateChanged(evt);
            }
        });
        mensual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensualActionPerformed(evt);
            }
        });

        rango.add(semestral);
        semestral.setText("Semestral");
        semestral.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                semestralItemStateChanged(evt);
            }
        });

        rango.add(anual);
        anual.setText("Anual");

        semestre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero-Junio", "Julio-Diciembre" }));

        mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        generar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        generar.setText("Generar");
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anual, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(semestral, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(semestre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(mensual, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(generar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {anual, mensual, semestral});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mensual)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semestral)
                    .addComponent(semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(anual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(generar))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {anual, mensual, semestral});

        cargando.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/loading.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel3)
                            .addGap(46, 46, 46)
                            .addComponent(tipoGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(global)
                            .addGap(18, 18, 18)
                            .addComponent(individual)
                            .addGap(18, 18, 18)
                            .addComponent(agente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(cargando, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(global)
                    .addComponent(individual)
                    .addComponent(agente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cargando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelGrafica.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grafica Generada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        panelGrafica.setPreferredSize(new java.awt.Dimension(800, 360));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 788, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 361, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelGrafica);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        new MenuPpal(u, false, this.n, this.e).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void tipoGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoGraficaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoGraficaActionPerformed

    private void globalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_globalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_globalActionPerformed

    private void individualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_individualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_individualActionPerformed

    private void mensualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mensualActionPerformed

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed
        botonDeGenerar();
        iconParpadeoDeEnvio();
    }//GEN-LAST:event_generarActionPerformed

    private void tipoGraficaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoGraficaItemStateChanged
    }//GEN-LAST:event_tipoGraficaItemStateChanged

    private void individualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_individualItemStateChanged
        if (individual.isSelected()) {
            agente.setEnabled(true);
        } else {
            agente.setEnabled(false);
        }
    }//GEN-LAST:event_individualItemStateChanged

    private void individualStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_individualStateChanged
        /*if(individual.isSelected())
         agente.setEnabled(true);
         else
         agente.setEnabled(true);*/
    }//GEN-LAST:event_individualStateChanged

    private void individualPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_individualPropertyChange
        /*if(individual.isSelected())
         agente.setEnabled(true);
         else
         agente.setEnabled(true);*/
    }//GEN-LAST:event_individualPropertyChange

    private void mensualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mensualItemStateChanged
        if (mensual.isSelected()) {
            mes.setEnabled(true);
        } else {
            mes.setEnabled(false);
        }
    }//GEN-LAST:event_mensualItemStateChanged

    private void semestralItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_semestralItemStateChanged
        if (semestral.isSelected()) {
            semestre.setEnabled(true);
        } else {
            semestre.setEnabled(false);
        }
    }//GEN-LAST:event_semestralItemStateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new GenerarGraficas(u, n, e, false).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        new ReporteriaEstadisticas(u, n, e).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox agente;
    private javax.swing.JRadioButton anual;
    private javax.swing.JLabel cargando;
    private javax.swing.JButton generar;
    private javax.swing.JRadioButton global;
    private javax.swing.ButtonGroup grupoGlobal;
    private javax.swing.JRadioButton individual;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mensual;
    private javax.swing.JComboBox mes;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.ButtonGroup rango;
    private javax.swing.JRadioButton semestral;
    private javax.swing.JComboBox semestre;
    private javax.swing.JComboBox tipoGrafica;
    // End of variables declaration//GEN-END:variables
    public void iniciarGraficas() {
        cargando.setVisible(true);
        int rangoT;
        String mesLin = "";
        String tituloRango = "";
        tipo = tipoGrafica.getSelectedItem().toString();
        String usuario = "", fechaInicio = "", fechaFin = "";
        Graficas g = null;
        String[] array;
        boolean primero = false;

        if (individual.isSelected()) {
            array = agente.getSelectedItem().toString().split(" ");
            ResultSet r = u.seleccionar("user", "usuario", "nombre='" + array[0] + "' AND apellido='" + array[1] + "'");
            try {
                usuario = r.getString("user");
            } catch (SQLException ex) {
                usuario = "";
            }
        }
        if (mensual.isSelected()) {
            rangoT = 1;
            switch (mes.getSelectedIndex()) {
                case 0: {
                    fechaInicio = c.get(Calendar.YEAR) + "-01-01";
                    fechaFin = c.get(Calendar.YEAR) + "-01-31";
                    mesLin = "01";
                    tituloRango = "\nMes de Enero";
                    break;
                }
                case 1: {
                    fechaInicio = c.get(Calendar.YEAR) + "-02-01";
                    fechaFin = c.get(Calendar.YEAR) + "-02-28";
                    tituloRango = "\nMes de Febrero";
                    mesLin = "02";
                    break;
                }
                case 2: {
                    fechaInicio = c.get(Calendar.YEAR) + "-03-01";
                    fechaFin = c.get(Calendar.YEAR) + "-03-31";
                    tituloRango = "\nMes de Marzo";
                    mesLin = "03";
                    break;
                }
                case 3: {
                    fechaInicio = c.get(Calendar.YEAR) + "-04-01";
                    fechaFin = c.get(Calendar.YEAR) + "-04-30";
                    tituloRango = "\nMes de Abril";
                    mesLin = "04";
                    break;
                }
                case 4: {
                    fechaInicio = c.get(Calendar.YEAR) + "-05-01";
                    fechaFin = c.get(Calendar.YEAR) + "-05-31";
                    tituloRango = "\nMes de Mayo";
                    mesLin = "05";
                    break;
                }
                case 5: {
                    fechaInicio = c.get(Calendar.YEAR) + "-06-01";
                    fechaFin = c.get(Calendar.YEAR) + "-06-30";
                    tituloRango = "\nMes de Junio";
                    mesLin = "06";
                    break;
                }
                case 6: {
                    fechaInicio = c.get(Calendar.YEAR) + "-07-01";
                    fechaFin = c.get(Calendar.YEAR) + "-07-31";
                    tituloRango = "\nMes de Julio";
                    mesLin = "07";
                    break;
                }
                case 7: {
                    fechaInicio = c.get(Calendar.YEAR) + "-08-01";
                    fechaFin = c.get(Calendar.YEAR) + "-08-31";
                    tituloRango = "\nMes de Agosto";
                    mesLin = "08";
                    break;
                }
                case 8: {
                    fechaInicio = c.get(Calendar.YEAR) + "-09-01";
                    fechaFin = c.get(Calendar.YEAR) + "-09-30";
                    tituloRango = "\nMes de Septiembre";
                    mesLin = "09";
                    break;
                }
                case 9: {
                    fechaInicio = c.get(Calendar.YEAR) + "-10-01";
                    fechaFin = c.get(Calendar.YEAR) + "-10-31";
                    tituloRango = "\nMes de Octubre";
                    mesLin = "10";
                    break;
                }
                case 10: {
                    fechaInicio = c.get(Calendar.YEAR) + "-11-01";
                    fechaFin = c.get(Calendar.YEAR) + "-11-30";
                    tituloRango = "\nMes de Noviembre";
                    mesLin = "11";
                    break;
                }
                case 11: {
                    fechaInicio = c.get(Calendar.YEAR) + "-12-01";
                    fechaFin = c.get(Calendar.YEAR) + "-12-31";
                    tituloRango = "\nMes de Diciembre";
                    mesLin = "12";
                    break;
                }

            }
        } else if (semestral.isSelected()) {
            rangoT = 2;
            if (semestre.getSelectedIndex() == 0) {
                primero = true;
                fechaInicio = c.get(Calendar.YEAR) + "-01-01";
                fechaFin = c.get(Calendar.YEAR) + "-06-30";
                tituloRango = "\nMeses de Enero a Junio";
            } else {
                primero = false;
                fechaInicio = c.get(Calendar.YEAR) + "-07-01";
                fechaFin = c.get(Calendar.YEAR) + "-12-31";
                tituloRango = "\nMeses de Julio a Diciembre";
            }
        } else {
            rangoT = 3;
        }
        //public Graficas(int t, int rango, String nombre, String datos, String valores, String user)

        //tituloRango
        if (individual.isSelected()) { //Asigno nombre a la grafica
            ResultSet r = u.seleccionar("concat (nombre, \" \",apellido) as name",
                    "usuario",
                    "user='" + usuario + "'");
            try {
                tituloRango += " \nAgente: " + r.getString("name");
            } catch (SQLException ex) {
                tituloRango = " Globales" + tituloRango;

            }

        }
        switch (tipo) {
            case "Tipos de ordenes procesadas": {
                if (individual.isSelected()) {//ordenes procesadas Individua(pastel)
                    g = new Graficas(2, rangoT,
                            "Ordenes Procesadas" + tituloRango,
                            "", "",
                            usuario);

                } else {//ordenes procesadas global(pastel)
                    g = new Graficas(1, rangoT,
                            "Ordenes Procesadas" + tituloRango,
                            "", "",
                            "");
                }

                break;
            }

            case "Errores cometidos": {
                if (individual.isSelected()) {//errores cometidos Individua(pastel)
                    g = new Graficas(4, rangoT,
                            "Errores Cometidos" + tituloRango,
                            "", "",
                            usuario);
                } else {//errores cometidos global(pastel)
                    g = new Graficas(3, rangoT,
                            "Errores Cometidos" + tituloRango,
                            "", "",
                            "");
                }
                break;
            }
            case "Tendencia de errores": {
                if (individual.isSelected()) {//Tendencia errores Individual(lineal)
                    g = new Graficas(2, rangoT,
                            "Tendencia de errores" + tituloRango,
                            "Errores", "Rangos de Tiempo",
                            usuario);
                } else {//tendencia errores global(lineal)
                    g = new Graficas(1, rangoT,
                            "Tendencia de errores" + tituloRango,
                            "Errores", "Rango",
                            "");
                }
                break;
            }
            case "Total ordenes completas": {
                if (individual.isSelected()) {//Total ordenes completas individual(lineal)
                    g = new Graficas(4, rangoT,
                            "Total de Ordenes Completas" + tituloRango,
                            "Ordenes", "Rangos de Tiempo",
                            usuario);
                } else {//Total ordenes completas global(lineal)
                    g = new Graficas(3, rangoT,
                            "Total de Ordenes Completas" + tituloRango,
                            "Ordenes", "Rango de Tiempo",
                            "");
                }
                break;

            }
            case "Relacion orden auditada/orden": {// relacion Orden Auditada/Orden (lineal)
                g = new Graficas(5, rangoT,
                        "Relacion Ordenes Auditadas/Procesadas",
                        "Auditadas/Procesadas (%)", "Rangos de Tiempo",
                        "");
                break;
            }
            case "Ordenes completas por agente": {//ordenes completas (barras)
                g = new Graficas(0, rangoT,
                        "Ordenes completas por los Agentes",
                        "Ordenes", "Agentes",
                        "");
                break;
            }

        }

        if (g != null) {
            g.setFechaFin(fechaFin);
            g.setFechaInicio(fechaInicio);
            g.setSemestre(primero);
            g.setMes(mesLin);
            if (tipo.equals("Tipos de ordenes procesadas") || tipo.equals("Errores cometidos")) {
                grafica = g.pastel();
            }
            if (tipo.equals("Tendencia de errores") || tipo.equals("Total ordenes completas") || tipo.equals("Relacion orden auditada/orden")) {
                grafica = g.lineal();
            }
            if (tipo.equals("Ordenes completas por agente")) {
                grafica = g.barras();
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha sido posible generar las graficas.");
        }


    }

    private void llenarAgentes() {
        ResultSet r = u.seleccionar("concat (nombre, \" \",apellido) as name",
                "usuario, es",
                "usuario.user=es.user AND es.codigoTipoUser=1 ORDER BY name ASC ");
        try {
            r.beforeFirst();
            while (r.next()) {
                agente.addItem(r.getString("name"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(GenerarGraficas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

    private void botonDeGenerar() {
        if (hiloEjecutando == null) {
            hiloEjecutando = new Thread(new Runnable() {
                @Override
                public void run() {
                    crearGrafica();
                    hiloEjecutando = null;
                    hiloCargando = null;
                }
            });
            hiloEjecutando.start();
            /*
             
             panelGrafica.removeAll();
             if (tipoGrafica.getSelectedIndex()==5){
             panelGrafica.setSize(new Dimension(800, 360));
             panelGrafica.setPreferredSize(new Dimension(800, 360));
             panelGrafica.setMaximumSize(new Dimension(800, 360));
             panelGrafica.setMinimumSize(new Dimension(800, 360));
             }
             else{
             panelGrafica.setSize(new Dimension(475, 360));
             panelGrafica.setPreferredSize(new Dimension(475, 360));
             panelGrafica.setMaximumSize(new Dimension(475, 360));
             panelGrafica.setMinimumSize(new Dimension(475, 360));
             }
            
             iniciarGraficas();
             cargando.setVisible(false);
             grafica.setPreferredSize(new Dimension(450,350));
             grafica.setMouseWheelEnabled(true);
             panelGrafica.setLayout(new java.awt.BorderLayout());            
             panelGrafica.add(grafica,BorderLayout.CENTER);
             panelGrafica.validate();
             */
        }
    }

    private void crearGrafica() {
        medirTiempoDeEnvio();
        panelGrafica.removeAll();
        if (tipoGrafica.getSelectedIndex() == 5) {
            panelGrafica.setSize(new Dimension(800, 360));
            panelGrafica.setPreferredSize(new Dimension(800, 360));
            panelGrafica.setMaximumSize(new Dimension(800, 360));
            panelGrafica.setMinimumSize(new Dimension(800, 360));
        } else {
            panelGrafica.setSize(new Dimension(475, 360));
            panelGrafica.setPreferredSize(new Dimension(475, 360));
            panelGrafica.setMaximumSize(new Dimension(475, 360));
            panelGrafica.setMinimumSize(new Dimension(475, 360));
        }

        iniciarGraficas();
        cargando.setVisible(false);
        grafica.setPreferredSize(new Dimension(450, 350));
        //grafica.setMouseWheelEnabled(true);
        panelGrafica.setLayout(new java.awt.BorderLayout());
        panelGrafica.add(grafica, BorderLayout.CENTER);
        panelGrafica.validate();

    }

    private void medirTiempoDeEnvio() {
        inicioDeEnvio = System.currentTimeMillis();
        finDeEnvio = System.currentTimeMillis();
    }

    private void iconParpadeoDeEnvio() {
        cargando.setVisible(true);
        if (hiloCargando == null) {
            hiloCargando = new Thread(new Runnable() {
                @Override
                public void run() {
                    System.out.println("inicio" + inicioDeEnvio + "\nFIN" + finDeEnvio);
                    while (inicioDeEnvio > finDeEnvio) {
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(GenerarGraficas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if (hiloCargando.isAlive()) {
                        hiloCargando.stop();
                    }
                    hiloCargando = null;
                    cargando.setVisible(false);
                }
            });
            hiloCargando.start();
        }
    }
}
